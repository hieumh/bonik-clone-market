generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ICategory {
  categoryId   Int        @id @default(autoincrement())
  categoryName String
  products     IProduct[]

  @@map("Category")
}

model IProduct {
  price            Float
  description      String
  rating           Int
  categoryId       Int
  productId        Int            @id @default(autoincrement())
  productName      String
  productSoldCount Int            @default(0)
  createAt         DateTime       @default(now())
  brandId          Int            @default(0)
  vendorId         Int            @default(0)
  cartProducts     ICartProduct[]
  flashDeal        IFlashDeal?
  brand            IBrand         @relation(fields: [brandId], references: [brandId])
  category         ICategory      @relation(fields: [categoryId], references: [categoryId])

  @@index([brandId], map: "Product_brandId_fkey")
  @@index([categoryId], map: "Product_categoryId_fkey")
  @@map("Product")
}

model IFlashDeal {
  dealId    Int      @id @default(autoincrement())
  dealName  String
  dealPrice Float
  endDate   DateTime
  productId Int      @unique
  startDate DateTime
  product   IProduct @relation(fields: [productId], references: [productId])

  @@map("FlashDeal")
}

model IShoppingCart {
  cartId       Int            @id @default(autoincrement())
  closedOrder  Boolean
  orderDate    DateTime?
  cartProducts ICartProduct[]

  @@map("ShoppingCart")
}

model ICartProduct {
  cartProductId Int           @id @default(autoincrement())
  cartId        Int
  productId     Int
  quantity      Int
  userId        Int           @default(0)
  shoppingCart  IShoppingCart @relation(fields: [cartId], references: [cartId])
  product       IProduct      @relation(fields: [productId], references: [productId])
  user          IUser         @relation(fields: [userId], references: [userId])

  @@index([cartId], map: "CartProduct_cartId_fkey")
  @@index([productId], map: "CartProduct_productId_fkey")
  @@map("CartProduct")
}

model IBrand {
  brandId  Int        @id @default(autoincrement())
  name     String
  products IProduct[]

  @@map("Brand")
}

model IUser {
  userId       Int            @id @default(autoincrement())
  username     String
  email        String
  password     String
  ICartProduct ICartProduct[]

  @@map("User")
}

model IVendor {
  vendorId Int    @id @default(autoincrement())
  name     String
  email    String
  password String

  @@map("Vendor")
}
